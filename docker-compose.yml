version: "3.8"

services:

  db:
    container_name: postgres_cargenius
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  app:
    container_name: app
    env_file:
      - ./.env
    build:
      context: ./server
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./server:/app
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - db

  redis:
    container_name: redis_cargenius
    image: redis:6.2-alpine

  celery_worker:
    container_name: celery_worker_cargenius
    build:
      context: ./server
      dockerfile: Dockerfile
    command: celery -A app.celery_worker.celery worker --loglevel=info
    volumes:
      - ./server:/app
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis

  pgadmin:
    container_name: pgadmin_cargenius
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - 8001:5050
    depends_on:
      - db

  flower:
    container_name: flower_cargenius
    build:
      context: ./server
      dockerfile: Dockerfile
    command: celery -A app.celery_worker.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - redis
      - celery_worker
